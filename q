[33mcommit b39dd7a1fa71b21d222dcb795a947b91f5437719[m[33m ([m[1;32mbo/omniauths[m[33m)[m
Author: monsieurBo <boscoho.hy@gmail.com>
Date:   Sun Jun 17 02:45:07 2018 +0800

    Amended, debugged & refactored omniauth login

[1mdiff --git a/app/controllers/sessions_controller.rb b/app/controllers/sessions_controller.rb[m
[1mdeleted file mode 100644[m
[1mindex 2b8aa80..0000000[m
[1m--- a/app/controllers/sessions_controller.rb[m
[1m+++ /dev/null[m
[36m@@ -1,38 +0,0 @@[m
[31m-class SessionsController < Devise::SessionsController[m
[31m-[m
[31m-[m
[31m-def create_from_omniauth[m
[31m-  auth_hash = request.env["omniauth.auth"][m
[31m-  authentication = Authentication.find_by_provider_and_uid(auth_hash["provider"], auth_hash["uid"]) ||  Authentication.create_with_omniauth(auth_hash)[m
[31m-[m
[31m-  # if: previously already logged in with OAuth[m
[31m-  if authentication.user[m
[31m-    user = authentication.user[m
[31m-    authentication.update_token(auth_hash)[m
[31m-    @next = root_url[m
[31m-    @notice = "Signed in!"[m
[31m-  # else: user logs in with OAuth for the first time[m
[31m-  else[m
[31m-    user = User.create_with_auth_and_hash(authentication, auth_hash)[m
[31m-    # you are expected to have a path that leads to a page for editing user details[m
[31m-    @next = edit_user_registration_path(user)[m
[31m-    @notice = "User created. Please confirm or edit details"[m
[31m-  end[m
[31m-[m
[31m-  def create[m
[31m-    if request.env[‚Äòomniauth.auth‚Äô][m
[31m-      user = User.create_with_omniauth(request.env[‚Äòomniauth.auth‚Äô])[m
[31m-      session[:user_id] = user.id[m
[31m-      redirect_to user_path(user.id)[m
[31m-    else[m
[31m-      user = User.find_by_email(params[:email])[m
[31m-      user && user.authenticate(params[:password])[m
[31m-      session[:user_id] = user.id[m
[31m-      redirect_to user_path(user.id)[m
[31m-    end[m
[31m-  end[m
[31m-[m
[31m-  sign_in(user)[m
[31m-  redirect_to @next, :notice => @notice[m
[31m-end[m
[31m-end[m
[1mdiff --git a/app/controllers/users/omniauth_callbacks_controller.rb b/app/controllers/users/omniauth_callbacks_controller.rb[m
[1mindex 8262725..c6d63de 100644[m
[1m--- a/app/controllers/users/omniauth_callbacks_controller.rb[m
[1m+++ b/app/controllers/users/omniauth_callbacks_controller.rb[m
[36m@@ -1,19 +1,50 @@[m
 # frozen_string_literal: true[m
 [m
 class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController[m
[32m+[m
   def facebook[m
[31m-    @user = User.from_omniauth(request.env["omniauth.auth"])[m
[32m+[m[32m    generic_callback('facebook')[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def google_oauth2[m
[32m+[m[32m    generic_callback('google_oauth2')[m
[32m+[m[32m  end[m
 [m
[32m+[m[32m  def twitter[m
[32m+[m[32m    generic_callback('twitter')[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def failure[m
[32m+[m[32m    flash[:error] = 'There was a problem signing you in. Please register or try signing in later.'[m
[32m+[m[32m    redirect_to new_user_registration_url[m
[32m+[m[32m  end[m
[32m+[m
[32m+[m[32m  def generic_callback(provider)[m
[32m+[m[32m    auth_hash = request.env['omniauth.auth'][m
[32m+[m[32m    @authentication = Authentication.find_for_oauth(auth_hash)[m
[32m+[m
[32m+[m[32m    @user = @authentication.user || current_user[m
[32m+[m[32m    # if previously registered and logged in before[m
[32m+[m[32m    if !@user.nil?[m
[32m+[m[32m      @authentication.update_token(auth_hash)[m
[32m+[m[32m    else    #if user sign up/log in for first time[m
[32m+[m[32m      @user = User.find_by(email: auth_hash.info.email)[m
[32m+[m[32m      if !@user.nil?  # creates authentication if registered before[m
[32m+[m[32m        @user.authentications << @authentication[m
[32m+[m[32m        @authentication.update_token(auth_hash)[m
[32m+[m[32m      else  # creates new account if not registered before[m
[32m+[m[32m        @user = User.from_omniauth(@authentication, auth_hash)[m
[32m+[m[32m        @authentication.update_token(auth_hash)[m
[32m+[m[32m      end[m
[32m+[m[32m    end[m
[32m+[m
[32m+[m[32m    # sign in @user[m
     if @user.persisted?[m
[31m-      sign_in_and_redirect @user, :event => :authentication[m
[31m-      set_flash_message(:notice, :success, :kind => "Facebook") if is_navigational_format?[m
[32m+[m[32m      sign_in_and_redirect @user, event: :authentication[m
[32m+[m[32m      set_flash_message(:notice, :success, kind: provider.capitalize) if is_navigational_format?[m
     else[m
[31m-      session["devise.facebook_data"] = request.env["omniauth.auth"][m
[32m+[m[32m      session["devise.#{provider}_data"] = auth_hash[m
       redirect_to new_user_registration_url[m
     end[m
   end[m
[31m-[m
[31m-  def failure[m
[31m-    redirect_to root_path[m
[31m-  end[m
 end[m
[1mdiff --git a/app/models/authentication.rb b/app/models/authentication.rb[m
[1mindex 1f76596..104c859 100644[m
[1m--- a/app/models/authentication.rb[m
[1m+++ b/app/models/authentication.rb[m
[36m@@ -1,19 +1,20 @@[m
 class Authentication < ApplicationRecord[m
   belongs_to :user[m
[32m+[m[32m  validates_presence_of :uid, :provider[m
[32m+[m[32m  validates_uniqueness_of :uid, :scope => :provider[m
 [m
[31m-[m
[31m-  def self.create_with_omniauth(auth_hash)[m
[31m-      self.new([m
[31m-        provider: auth_hash["provider"],[m
[31m-        uid: auth_hash["uid"],[m
[31m-        token: auth_hash["credentials"]["token"][m
[31m-      )[m
[32m+[m[32m  def self.find_for_oauth(auth)[m
[32m+[m[32m    authentication = find_by(provider: auth.provider, uid: auth.uid)[m
[32m+[m[32m    authentication = create(uid: auth.uid, provider: auth.provider) if authentication.nil?[m
[32m+[m[32m    authentication.token = auth.credentials.token[m
[32m+[m[32m    authentication.save[m
[32m+[m[32m    authentication[m
[32m+[m[32m  end[m
[32m+[m[41m  [m
[32m+[m[32m  def update_token(auth)[m
[32m+[m[32m    self.token = auth.credentials.token[m
[32m+[m[32m    self.save[m
   end[m
[31m-[m
[31m-  def update_token(auth_hash)[m
[31m-      self.token = auth_hash["credentials"]["token"][m
[31m-      self.save[m
[31m-    end[m
 [m
 [m
 [m
[1mdiff --git a/app/models/user.rb b/app/models/user.rb[m
[1mindex 46a5570..a8c7085 100644[m
[1m--- a/app/models/user.rb[m
[1m+++ b/app/models/user.rb[m
[36m@@ -4,60 +4,16 @@[m [mclass User < ApplicationRecord[m
   # Include default devise modules. Others available are:[m
   # :confirmable, :lockable, :timeoutable and :omniauthable[m
   devise :database_authenticatable, :registerable,[m
[31m-         :recoverable, :rememberable, :trackable, :validatable[m
[31m-  devise :omniauthable, :omniauth_providers => [:facebook][m
[31m-[m
[31m-  def self.new_with_session(params, session)[m
[31m-    super.tap do |user|[m
[31m-      if data = session["devise.facebook_data"] && session["devise.facebook_data"]["extra"]["raw_info"][m
[31m-        user.email = data["email"] if user.email.blank?[m
[31m-      end[m
[31m-    end[m
[31m-  end[m
[31m-[m
[31m-    def self.create_with_omniauth(auth)[m
[31m-[m
[31m-        user = find_or_create_by(uid: auth[‚Äòuid‚Äô], provider:  auth[‚Äòprovider‚Äô])[m
[31m-        user.email = ‚Äú#{auth[‚Äòuid‚Äô]}@#{auth[‚Äòprovider‚Äô]}.com‚Äù[m
[31m-        user.password = auth[‚Äòuid‚Äô][m
[31m-        user.name = auth[‚Äòinfo‚Äô][‚Äòname‚Äô][m
[31m-        if User.exists?(user)[m
[31m-          user[m
[31m-        else[m
[31m-          user.save![m
[31m-          user[m
[31m-        end[m
[31m-    end[m
[31m-[m
[31m-  def self.from_omniauth(auth)[m
[31m-    where(provider: auth.provider, uid: auth.uid).first_or_create do |user|[m
[31m-      user.email = auth.info.email[m
[31m-      user.password = Devise.friendly_token[0,20][m
[31m-      user.name = auth.info.name   # assuming the user model has a name[m
[31m-      user.image = auth.info.image # assuming the user model has an image[m
[31m-    end[m
[31m-  end[m
[31m-[m
[31m-  def self.create_with_auth_and_hash(authentication, auth_hash)[m
[31m-        user = self.create!([m
[31m-          name: auth_hash["info"]["name"],[m
[31m-          email: auth_hash["info"]["email"],[m
[31m-          password: SecureRandom.hex(10)[m
[31m-        )[m
[31m-        user.authentications << authentication[m
[31m-        return user[m
[31m-  end[m
[31m-[m
[31m-          # grab google to access google for user data[m
[31m-  def google_token[m
[31m-        x = self.authentications.find_by(provider: 'google_oauth2')[m
[31m-        return x.token unless x.nil?[m
[32m+[m[32m         :recoverable, :rememberable, :trackable, :validatable, :omniauthable[m
[32m+[m
[32m+[m[32m  def self.from_omniauth(authentication, auth)[m
[32m+[m[32m    user = self.create!([m
[32m+[m[32m      email: auth.info.email,[m
[32m+[m[32m      password: Devise.friendly_token[0,20],[m
[32m+[m[32m      name: auth.info.name,   # assuming the user model has a name[m
[32m+[m[32m    )[m
[32m+[m[32m    user.authentications << authentication[m
[32m+[m[32m    user[m
   end[m
 [m
[31m-  def twitter_token[m
[31m-        x = self.authentications.find_by(provider: 'twitter')[m
[31m-        return x.token unless x.nil?[m
[31m-  end[m
[31m-[m
[31m-[m
 end[m
[1mdiff --git a/app/views/articles/index.html.erb b/app/views/articles/index.html.erb[m
[1mindex a413eec..bd84e88 100644[m
[1m--- a/app/views/articles/index.html.erb[m
[1m+++ b/app/views/articles/index.html.erb[m
[36m@@ -1,6 +1,6 @@[m
 <h1> Hello </h1>[m
 <% unless current_user %>[m
[31m-  <%= link_to "Sign in with Facebook", auth_facebook_callback_path %>[m
[32m+[m[32m  <%= link_to "Sign in with Facebook", user_facebook_omniauth_authorize_path %>[m
 <% else %>[m
   <%= current_user[:name] %>[m
   <%= link_to "Logout", destroy_user_session_path, method: :delete %>[m
[1mdiff --git a/app/views/devise/sessions/new.html.erb b/app/views/devise/sessions/new.html.erb[m
[1mindex 89dbcb7..0c0f6e7 100644[m
[1m--- a/app/views/devise/sessions/new.html.erb[m
[1m+++ b/app/views/devise/sessions/new.html.erb[m
[36m@@ -22,8 +22,8 @@[m
     <%= f.submit "Log in" %>[m
   </div>[m
 <% end %>[m
[31m-<%= link_to "Sign in with Google", "/auth/google_oauth2" %>[m
[31m-<%= link_to "Sign in with Twitter", "/auth/twitter" %>[m
[32m+[m[32m<%= link_to "Sign in with Google", user_google_oauth2_omniauth_authorize_path %>[m
[32m+[m[32m<%= link_to "Sign in with Twitter", user_twitter_omniauth_authorize_path %>[m
 <%= link_to "Sign in with Facebook", user_facebook_omniauth_authorize_path %>[m
 [m
 <%= render "devise/shared/links" %>[m
[1mdiff --git a/config/database.yml b/config/database.yml[m
[1mindex 5c708e8..496fa80 100644[m
[1m--- a/config/database.yml[m
[1m+++ b/config/database.yml[m
[36m@@ -14,7 +14,7 @@[m [mdefault: &default[m
   encoding: utf8[m
   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>[m
   username: root[m
[31m-  password:[m
[32m+[m[32m  password: "longpress"[m
   socket: /var/run/mysqld/mysqld.sock[m
 [m
 development:[m
[1mdiff --git a/config/initializers/devise.rb b/config/initializers/devise.rb[m
[1mindex 8e9a361..5629a43 100644[m
[1m--- a/config/initializers/devise.rb[m
[1m+++ b/config/initializers/devise.rb[m
[36m@@ -10,8 +10,6 @@[m [mDevise.setup do |config|[m
   # by default. You can change it below and use your own secret key.[m
   # config.secret_key = '86125571553c38629831ec0eae4da8a09da0c31c69b7ba71ca4f3a5cb9f62b9228d4927ae396e60f60d0d919f4e56c2735eb7a32f5e2fc5a0ac0dcde7fa26adf'[m
 [m
[31m-[m
[31m-config.omniauth :facebook, ENV["FACEBOOK_APP_ID"], ENV["FACEBOOK_SECRET_ID"], callback_url: "https://0b09adb5.ngrok.io/auth/facebook/callback"[m
   # ==> Controller configuration[m
   # Configure the parent class to the devise controllers.[m
   # config.parent_controller = 'DeviseController'[m
[36m@@ -259,6 +257,9 @@[m [mconfig.omniauth :facebook, ENV["FACEBOOK_APP_ID"], ENV["FACEBOOK_SECRET_ID"], ca[m
   # Add a new OmniAuth provider. Check the wiki for more information on setting[m
   # up on your models and hooks.[m
   # config.omniauth :github, 'APP_ID', 'APP_SECRET', scope: 'user,public_repo'[m
[32m+[m[32m  config.omniauth :google_oauth2, ENV['GOOGLE_APP_ID'], ENV['GOOGLE_APP_SECRET'][m
[32m+[m[32m  config.omniauth :facebook, ENV['FACEBOOK_APP_ID'], ENV['FACEBOOK_APP_SECRET'][m
[32m+[m[32m  config.omniauth :twitter, ENV['TWITTER_APP_ID'], ENV['TWITTER_APP_SECRET'][m
 [m
   # ==> Warden configuration[m
   # If you want to use other strategies, that are not supported by Devise, or[m
[1mdiff --git a/config/initializers/omniauth.rb b/config/initializers/omniauth.rb[m
[1mdeleted file mode 100644[m
[1mindex 2b8babf..0000000[m
[1m--- a/config/initializers/omniauth.rb[m
[1m+++ /dev/null[m
[36m@@ -1,9 +0,0 @@[m
[31m-Rails.application.config.middleware.use OmniAuth::Builder do[m
[31m-  provider :google_oauth2, ENV['google_client_id'], ENV['google_secret'],skip_jwt: true[m
[31m-  provider :twitter, ENV['TWITTER_API_CONSUMER_KEY'], ENV['TWITTER_API_SECRET'][m
[31m-  provider :facebook, ENV['FACEBOOK_APP_ID'], ENV["FACEBOOK_SECRET_ID"], scope: 'public_profile', info_fields: 'id,name,link'[m
[31m-[m
[31m- #  Rails.application.config.middleware.use OmniAuth::Builder do[m
[31m- # provider :facebook, Rails.application.secrets.facebook_app_id,[m
[31m- # Rails.application.secrets.facebook_app_secret, scope: ‚Äòpublic_profile‚Äô, info_fields: ‚Äòid,name,link‚Äô[m
[31m-end[m
[1mdiff --git a/config/routes.rb b/config/routes.rb[m
[1mindex 3a39902..faabddf 100644[m
[1m--- a/config/routes.rb[m
[1m+++ b/config/routes.rb[m
[36m@@ -1,13 +1,7 @@[m
 Rails.application.routes.draw do[m
[31m-  devise_for :users, :controllers => { :omniauth_callbacks => "users/omniauth_callbacks" }[m
[32m+[m[32m  devise_for :users, controllers: { omniauth_callbacks: 'users/omniauth_callbacks' }[m
   root 'articles#index'[m
   resources :articles[m
[31m-  # get "/auth/:provider/callback" => "sessions#create_from_omniauth"[m
[31m-  devise_scope :user do[m
[31m-   get "/auth/:provider/callback", to: "sessions#create_from_omniauth"[m
[31m-   get 'auth/facebook/callback', to: 'sessions#create'[m
[31m-    get 'auth/failure', to: redirect('/')[m
[31m-end[m
 [m
   # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html[m
 end[m
